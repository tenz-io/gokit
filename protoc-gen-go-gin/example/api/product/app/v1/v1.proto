syntax = "proto3";

option go_package = "example/api/product/app/v1;v1";

package product.app.v1;

import "google/api/annotations.proto";

// blog service is a blog demo
service BlogService {
  rpc GetArticles(GetArticlesReq) returns (GetArticlesResp) {
    option (google.api.http) = {
      get: "/v1/articles"
      additional_bindings {
        get: "/v1/author/{author_id}/articles"
      }
    };
  }

  rpc CreateArticle(Article) returns (Article) {
    option (google.api.http) = {
      post: "/v1/author/{author_id}/articles"
    };
  }

  rpc UploadImage(UploadImageReq) returns (UploadImageResp) {
    option (google.api.http) = {
      post: "/v1/images"
    };
  }
}

message GetArticlesReq {
  // @inject_tag: form:"title" binding:"required"
  string title = 1;

  // @inject_tag: query:"page" default:"1"
  int32 page = 2;

  // @inject_tag: query:"page_size" default:"10"
  int32 page_size = 3;

  // @inject_tag: uri:"author_id" binding:"required"
  int32 author_id = 4;
}

message GetArticlesResp {
  int64 total = 1;
  repeated Article articles = 2;
}

message Article {
  string title = 1;
  string content = 2;
  // @inject_tag: form:"author_id" uri:"author_id"
  int32 author_id = 3;
}

message UploadImageReq {
  // @inject_tag: form:"file"
  bytes file = 1;
  string filename = 2;
}

message UploadImageResp {
	string key = 1;
}